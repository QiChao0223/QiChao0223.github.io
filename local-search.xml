<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>aby</title>
    <link href="/2024/01/17/aby/"/>
    <url>/2024/01/17/aby/</url>
    
    <content type="html"><![CDATA[<p>$x$是1 bit</p><blockquote><p>yao share</p></blockquote><p>当$x = 0$ ，$P_1$：$x_{1}^Y = k_x = k_0 \oplus x R = k_0$</p><p>当$x = 1$ ，$P_1$：$x_{1}^Y = k_x = k_0 \oplus x R = k_0 \oplus R$</p><blockquote><p>yao reconstruct</p></blockquote><p>$\pi = \langle x \rangle <em>{1-i} ^Y [0] = k</em>{1-i}[0]$</p><p>$\pi \oplus \langle x \rangle_{i} ^ Y [0] = k_{1-i}[0] \oplus (k_{1-i}[0] \oplus xR)[0] = 0 \oplus x R = x R = x$</p><p>其中$R$是一个$\kappa$-bit的字符串，并且$R[0] = 1$</p>]]></content>
    
    
    
    <tags>
      
      <tag>mpc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>截断</title>
    <link href="/2024/01/15/%E6%88%AA%E6%96%AD/"/>
    <url>/2024/01/15/%E6%88%AA%E6%96%AD/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>mpc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数字签名</title>
    <link href="/2024/01/14/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/"/>
    <url>/2024/01/14/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h1>Schnorr签名算法</h1><p>（一）、秘钥生成</p><ul><li>选择一条椭圆曲线$E_p(a,b)$ 和基点$G$</li><li>选择私钥$d_A$ （$d_a &lt; n $， $n$是 $G$ 的阶），利用基点$G$计算公钥$Q_A = d_A \cdot G$</li></ul><p>（二）、签名算法</p><ul><li>随机选择一个整数$K$（$K$ &lt; n）</li><li>计算$R = K \cdot G = (x_1, y_1)$</li><li>$\sigma = K + hash(Q_A|| m || R) \cdot d_A$</li><li>签名$(\sigma, R)$</li></ul><p>（三）、验证算法</p><ul><li>验证等式：$\sigma \cdot G = hash(Q_A|| m || R) \cdot Q_A + R$</li><li>如果等式成立输出 $1$，否则输出 $0$</li></ul><h1>SM2签名</h1><p>$d_A$：用户 $A$ 的私钥</p><p>$P_A$：用户 $A$ 的公钥</p><p>$ID_A$：用户 $A$ 的可辨别标识</p><p>$n$：基点 $G$ 的阶</p><p>（一）、签名算法</p><blockquote><p>设待签名的消息为$M$，$Z_A=H_{256}(ENTL_A\parallel ID_A\parallel a\parallel b\parallel x_G\parallel y_G\parallel x_A\parallel y_A)$，其中$a、b$为椭圆曲线参数，$G$的坐标$x_G、y_G$和$P_A$的坐标$x_A、y_A$</p></blockquote><ol><li>置$\overline{M}=Z_A\parallel M$</li><li>计算$e=H_v(\overline{M})$</li><li>用随机数发生器产生随机数$k \in [1, n-1]$</li><li>计算椭曲线点$(x_1,y_1) = k \cdot G$</li><li>计算$r = e + x_1$ mod  $n$，若$r = 0$ 或 $r + k = n$，则返回第三步</li><li>计算$s = \frac{k- r \cdot d_A}{1+ d_A}$ mod $n$，若$s = 0$，则返回第三步</li><li>消息的签名为$(r, s)$</li></ol><p>（二）、验证算法</p><blockquote><p>收到的消息 $M’$ 及其数字签名 $(r’,s’)$</p></blockquote><ol><li>检验 $r’ \in [1, n-1]$ 是否成立，若不成立则验证不通过</li><li>检验$s’ \in [1, n-1]$ 是否成立，若不成立则验证不通过</li><li>置$\overline{M}‘=Z_A\parallel M’$</li><li>计算$e’=H_v(\overline{M}')$</li><li>计算 $t = r’ + s’$ mod $n$，若$t = 0$，则验证不通过</li><li>计算椭圆曲线点$(x_1’, x_2’) = s’ \cdot G + t \cdot P_A$</li><li>计算$R = (e’ + x_1’) $ mod $n$，检验 $R = r’$ 是否成立，若成立则验证通过，否则验证不通过</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>数字签名</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
